// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package winrm

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	Host     *string `cty:"host"`
	Port     *int    `cty:"port"`
	Username *string `cty:"username"`
	Password *string `cty:"password"`
	Timeout  *string `cty:"timeout"`
	Https    *bool   `cty:"https"`
	Insecure *bool   `cty:"insecure"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{} { return new(FlatConfig) }

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"host":     &hcldec.AttrSpec{Name: "host", Type: cty.String, Required: false},
		"port":     &hcldec.AttrSpec{Name: "port", Type: cty.Number, Required: false},
		"username": &hcldec.AttrSpec{Name: "username", Type: cty.String, Required: false},
		"password": &hcldec.AttrSpec{Name: "password", Type: cty.String, Required: false},
		"timeout":  &hcldec.AttrSpec{Name: "timeout", Type: cty.String, Required: false},
		"https":    &hcldec.AttrSpec{Name: "https", Type: cty.Bool, Required: false},
		"insecure": &hcldec.AttrSpec{Name: "insecure", Type: cty.Bool, Required: false},
	}
	return s
}
